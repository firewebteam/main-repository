from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QGridLayout, QLineEdit, QPushButton, QMessageBox

class Okienko(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)

        self.interfejs()

    def interfejs(self):

        #et1 = QLabel("Działanie", self)
        et2 = QLabel("Pole kalkulatora", self)
        #et3 = QLabel("Liczba 2", self)
        #et4 = QLabel("Wynik", self)


        self.edt1 = QLineEdit()
        #self.edt2 = QLineEdit()
        #self.edt3 = QLineEdit()
        #self.edt4 = QLineEdit()

        self.edt1.readonly = True

        przycisk1 = QPushButton("&-", self)
        przycisk2 = QPushButton("&+", self)
        przycisk3 = QPushButton("&*", self)
        przycisk4 = QPushButton("&/", self)
        przycisk5 = QPushButton("&0", self)
        przycisk6 = QPushButton("&1", self)
        przycisk7 = QPushButton("&2", self)
        przycisk8 = QPushButton("&3", self)
        przycisk9 = QPushButton("&4", self)
        przycisk10 = QPushButton("&5", self)
        przycisk11= QPushButton("&6", self)
        przycisk12= QPushButton("&7", self)
        przycisk13= QPushButton("&8", self)
        przycisk14= QPushButton("&9", self)
        przycisk15= QPushButton("√", self)
        przycisk16= QPushButton("&=", self)
        przycisk17= QPushButton("CE", self)

        uklad = QGridLayout()

        uklad.addWidget(et2, 0, 0)
        #uklad.addWidget(et1, 0, 1)
        #uklad.addWidget(et3, 0, 2)
        #uklad.addWidget(et4, 0, 3)

        uklad.addWidget(self.edt1, 1, 0)
        #uklad.addWidget(self.edt4, 1, 1) #dzialanie
        #uklad.addWidget(self.edt2, 1, 2)
        #uklad.addWidget(self.edt3, 1, 3)
        uklad.addWidget(przycisk1, 2,1)
        uklad.addWidget(przycisk2, 2, 0)
        uklad.addWidget(przycisk3, 2, 2)
        uklad.addWidget(przycisk4, 2, 3)
        uklad.addWidget(przycisk12, 3, 0)
        uklad.addWidget(przycisk13, 3, 1)
        uklad.addWidget(przycisk14, 3, 2)
        uklad.addWidget(przycisk9, 4, 0)
        uklad.addWidget(przycisk10, 4, 1)
        uklad.addWidget(przycisk11, 4, 2)
        uklad.addWidget(przycisk6, 5, 0)
        uklad.addWidget(przycisk7, 5, 1)
        uklad.addWidget(przycisk8, 5, 2)
        uklad.addWidget(przycisk5, 6, 1)
        uklad.addWidget(przycisk15, 3, 3)
        uklad.addWidget(przycisk16, 6, 3)
        uklad.addWidget(przycisk17, 5, 3)


        self.setLayout(uklad)

        self.tekst=""
        self.liczba1=0
        self.liczba2=0
        self.znak=""

        przycisk5.clicked.connect(self.c0)
        przycisk6.clicked.connect(self.c1)
        przycisk7.clicked.connect(self.c2)
        przycisk8.clicked.connect(self.c3)
        przycisk9.clicked.connect(self.c4)
        przycisk10.clicked.connect(self.c5)
        przycisk11.clicked.connect(self.c6)
        przycisk12.clicked.connect(self.c7)
        przycisk13.clicked.connect(self.c8)
        przycisk14.clicked.connect(self.c9)

        przycisk2.clicked.connect(self.plus)
        przycisk16.clicked.connect(self.wynik)
        przycisk1.clicked.connect(self.minus)
        przycisk3.clicked.connect(self.mnoz)
        przycisk4.clicked.connect(self.dziel)
        przycisk17.clicked.connect(self.usun)
        przycisk15.clicked.connect(self.pierwiastek)




        self.setGeometry(400,500, 300, 200)
        self.setWindowTitle("Kalkulator")
        self.show()


    def plus(self):
        self.liczba1 = float(self.edt1.text())
        self.edt1.setText("+")
        self.tekst=""
        self.znak="+"
    def minus(self):
        self.liczba1 = float(self.edt1.text())
        self.edt1.setText("-")
        self.tekst=""
        self.znak="-"
    def mnoz(self):
        self.liczba1 = float(self.edt1.text())
        self.edt1.setText("*")
        self.tekst=""
        self.znak="*"
    def dziel(self):
        self.liczba1 = float(self.edt1.text())
        self.edt1.setText("/")
        self.tekst=""
        self.znak="/"
    def pierwiastek(self):
        self.liczba1 = float(self.edt1.text())
        self.edt1.setText("√")
        self.tekst = ""
        self.edt1.setText(str(self.liczba1**(1/2)))
    def usun(self):
        self.tekst = ""
        self.znak= ""
        self.edt1.setText("")
    def wynik(self):
        self.liczba2 = float(self.edt1.text())
        if(self.znak=="+"):
            self.edt1.setText(str(self.liczba1+self.liczba2))
        if (self.znak == "-"):
            self.edt1.setText(str(self.liczba1 - self.liczba2))
        if (self.znak == "*"):
            self.edt1.setText(str(self.liczba1 * self.liczba2))
        if (self.znak == "/"):
            if self.liczba2==0:
                QMessageBox.warning(self, "Błąd", "Nie dziel przez zero!", QMessageBox.Ok)
                self.edt1.setText("")
                self.tekst=""
            else:
                self.edt1.setText(str(self.liczba1 / self.liczba2))

    def c1(self):
            self.tekst+="1"
            self.edt1.setText(self.tekst)
    def c2(self):
            self.tekst+="2"
            self.edt1.setText(self.tekst)

    def c3(self):
        self.tekst += "3"
        self.edt1.setText(self.tekst)

    def c4(self):
        self.tekst += "4"
        self.edt1.setText(self.tekst)
    def c5(self):
        self.tekst += "5"
        self.edt1.setText(self.tekst)
    def c6(self):
        self.tekst += "6"
        self.edt1.setText(self.tekst)
    def c7(self):
        self.tekst += "7"
        self.edt1.setText(self.tekst)
    def c8(self):
        self.tekst += "8"
        self.edt1.setText(self.tekst)
    def c9(self):
        self.tekst += "9"
        self.edt1.setText(self.tekst)
    def c0(self):
        self.tekst += "0"
        self.edt1.setText(self.tekst)

    def dzialanie(self):

        nadawca = self.sender()

        try:

            if nadawca.text() == "1":
                liczba1 = liczba1 + z*1
                self.edt1.setText(str(liczba1))

        except ValueError:
            QMessageBox.warning(self, "Błąd", "Błąd danych", QMessageBox.Ok)


if __name__ == '__main__':
    import sys
    app = QApplication(sys.argv)
    okno = Okienko()
    sys.exit(app.exec_())



